name: critical-action

on:
  workflow_dispatch:

permissions:
  checks: write
  actions: read
  contents: read

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
        token: ${{secrets.TEST_GITHUB_TOKEN}}

    - name: Set Merge Gate to FAIL (Lock Merges)
      env:
        GH_TOKEN: ${{ secrets.TEST_GITHUB_TOKEN }}
        GATE_WORKFLOW: "merge-gate-controller.yml"
        TARGET_BRANCH: ${{ github.ref_name }}
      run: |
        echo "Triggering workflow '$GATE_WORKFLOW' on branch '$TARGET_BRANCH' with input 'fail' to LOCK merges."
        gh workflow run "$GATE_WORKFLOW" --ref "$TARGET_BRANCH" -f gate_action=fail
        echo "Lock request sent. There might be a short delay until the gate check updates."

    - name: Pause for 60 seconds to allow merge lock check
      run: |
        echo "Workflow paused for 60 seconds."
        echo "Go to a Pull Request targeting the protected branch."
        echo "The 'merge-lock-critical-workflow' status check should be yellow (pending)."
        echo "The merge button should be disabled or indicate the check needs to pass."
        sleep 60
        echo "Resuming workflow..."
      shell: bash

    - name: Set Merge Gate to PASS (Unlock Merges)
      if: always()
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        GATE_WORKFLOW: "merge-gate-controller.yml"
        TARGET_BRANCH: ${{ github.ref_name }}
      run: |
        echo "Triggering workflow '$GATE_WORKFLOW' on branch '$TARGET_BRANCH' with input 'pass' to UNLOCK merges."
        gh workflow run "$GATE_WORKFLOW" --ref "$TARGET_BRANCH" -f gate_action=pass
        echo "Unlock request sent."

