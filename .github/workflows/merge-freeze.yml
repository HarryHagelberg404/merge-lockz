name: Merge Lock API

on:
  workflow_dispatch:

permissions:
  contents: read # Example, needed for checkout

jobs:
  lock_run_unlock:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Lock Branch
        env:
          GH_TOKEN: ${{ secrets.TEST_GITHUB_TOKEN }}
          BRANCH_NAME: main # Or your target branch
          REPO_OWNER: ${{ github.repository_owner }}
          REPO_NAME: ${{ github.event.repository.name }}
        run: |
          echo "Attempting to lock branch: $BRANCH_NAME"

          # Construct the JSON payload explicitly
          # Note: true, false, null are NOT quoted in JSON
          JSON_PAYLOAD=$(cat <<EOF
          {
            "required_status_checks": null,
            "enforce_admins": true,
            "required_pull_request_reviews": null,
            "restrictions": null,
            "allow_force_pushes": false,
            "allow_deletions": false,
            "block_creations": false,
            "required_linear_history": false,
            "required_conversation_resolution": false,
            "lock_branch": true
          }
          EOF
          )

          # Send the JSON payload using --input -
          echo "$JSON_PAYLOAD" | gh api \
            --method PUT "/repos/$REPO_OWNER/$REPO_NAME/branches/$BRANCH_NAME/protection" \
            -H "Accept: application/vnd.github+json" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            --input - \
            --silent || { echo "Failed to lock branch"; exit 1; }

          echo "Branch $BRANCH_NAME locked."

      - name: Run Critical Task
        id: critical_task
        run: |
          echo "Running the important process on locked branch..."
          sleep 30
          echo "Process finished!"

      - name: Unlock Branch
        if: always()
        env:
          GH_TOKEN: ${{ secrets.TEST_GITHUB_TOKEN }}
          BRANCH_NAME: main
          REPO_OWNER: ${{ github.repository_owner }}
          REPO_NAME: ${{ github.event.repository.name }}
        run: |
          echo "Attempting to unlock branch: $BRANCH_NAME"
          JSON_PAYLOAD=$(cat <<EOF
          {
            "required_status_checks": null,
            "enforce_admins": true,
            "required_pull_request_reviews": null,
            "restrictions": null,
            "allow_force_pushes": false,
            "allow_deletions": false,
            "block_creations": false,
            "required_linear_history": false,
            "required_conversation_resolution": false,
            "lock_branch": false # Set to false to unlock
          }
          EOF
          )
          CURRENT_PROTECTION=$(gh api \
            --method GET "/repos/$REPO_OWNER/$REPO_NAME/branches/$BRANCH_NAME/protection" \
            -H "Accept: application/vnd.github+json" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            --jq . \
            --silent || echo "Failed to get current protection settings. Maybe none exist?")

          if [[ -z "$CURRENT_PROTECTION" || "$CURRENT_PROTECTION" == "null" ]]; then
            echo "No existing protection rules found or failed to fetch. Skipping unlock."
          fi

          UPDATED_PROTECTION=$(echo "$CURRENT_PROTECTION" | jq '.lock_branch = false')
          echo "$UPDATED_PROTECTION" | gh api \
            --method PUT "/repos/$REPO_OWNER/$REPO_NAME/branches/$BRANCH_NAME/protection" \
            -H "Accept: application/vnd.github+json" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            --input - \
            --silent || { echo "Failed to unlock branch - MANUAL INTERVENTION MAY BE REQUIRED"; exit 1; } # Exit if unlock fails

          echo "Branch $BRANCH_NAME unlocked."
