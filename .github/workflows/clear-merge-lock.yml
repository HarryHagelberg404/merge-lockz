name: clear-merge-lock

on:
  workflow_dispatch:

permissions:
  checks: write
  actions: read
  contents: read

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:

    - name: Update Merge Lock Check to Success
      uses: actions/github-script@v7
      if: always()
      with:
        script: |
          const checkRunId = ${{ steps.create_merge_lock.outputs.result }}
          const conclusion = '${{ job.status }}' === 'success' ? 'success' : 'neutral'
          const checkName = 'merge-lock-critical-workflow'

          if (!checkRunId) {
            console.log('Could not find check run ID. Skipping update.')
            return
          }

          console.log(`Updating check run ID: ${checkRunId} to conclusion: ${conclusion}`)

          await github.rest.checks.update({
            owner: context.repo.owner,
            repo: context.repo.repo,
            check_run_id: checkRunId,
            status: 'completed',
            conclusion: 'success',
            output: {
              title: 'Critical Workflow Finished',
              summary: `Workflow completed with status: ${{ job.status }}. Merge lock released.`
            }
          })
          console.log('Check run updated.')
      env:
        GITHUB_TOKEN: ${{ secrets.TEST_GITHUB_TOKEN }}

name: clear-merge-lock

on:
  workflow_dispatch:

permissions:
  checks: write
  actions: read
  contents: read

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
    - name: Update Merge Lock Check to Success
      uses: actions/github-script@v7
      if: always()
      with:
        script: |
          const checkRunId = '${{ steps.create_merge_lock.outputs.result }}';
          const jobStatus = '${{ job.status }}';
          const checkName = 'merge-lock-critical-workflow';

          if (!checkRunId || checkRunId === '') {
            console.log('Check run ID is missing (likely the creation step was skipped or failed). Skipping update.');
            return;
          }

          const checkConclusion = 'success';

          console.log(`Updating check run ID: ${checkRunId} ("${checkName}")`);
          console.log(`Workflow job status was: ${jobStatus}`);
          console.log(`Setting check conclusion to: ${checkConclusion} to release merge lock.`);

          try {
            await github.rest.checks.update({
              owner: context.repo.owner,
              repo: context.repo.repo,
              check_run_id: parseInt(checkRunId, 10),
              status: 'completed',
              conclusion: checkConclusion,
              output: {
                title: 'Critical Workflow Finished',
                summary: `Workflow completed with status: ${jobStatus}. Merge lock released.`
              }
            });
            console.log('Check run updated successfully.');
          } catch (error) {
            console.error(`Error updating check run ${checkRunId}: ${error}`);
            core.setFailed(`Failed to update merge lock status check: ${error.message}`);
          }
      env:
        GITHUB_TOKEN: ${{ secrets.TEST_GITHUB_TOKEN }}

